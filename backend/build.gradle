plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
	id 'java'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.projectlombok:lombok:1.18.22'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'

	// Test에서 Slf4j 사용(compileOnly)
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// Gradle 7+는 compile, runtime configuration 지원X -> implementation, compileOnly, runtimeOnly 사용
	compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	implementation group: 'org.json', name: 'json', version: '20210307'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

	implementation 'com.querydsl:querydsl-jpa'

	// Google Firebase
	implementation 'com.google.firebase:firebase-admin:8.1.0'
	implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'

	// MIME Type Detection
	implementation group: 'org.apache.tika', name: 'tika-core', version: '2.1.0'

	// Random Code Generation
	implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'

	compileOnly 'org.springframework.boot:spring-boot-autoconfigure'
	compileOnly 'org.springframework.boot:spring-boot-autoconfigure-processor'
}

test {
	useJUnitPlatform()
}

//QueryDSL 설정
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
	library = 'com.querydsl:querydsl-apt'
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}
